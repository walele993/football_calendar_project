name: Update Football Data

permissions:
  contents: write

on:
  schedule:
    - cron: '0 0 * * *'  # Runs daily at 00:00 UTC
  workflow_dispatch:     # Allow manual triggering

jobs:
  update_data:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch full history for rebasing

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: pip install -r requirements.txt

    - name: Clone football repositories
      run: |
        git clone --depth 1 https://github.com/openfootball/deutschland.git
        git clone --depth 1 https://github.com/openfootball/italy.git
        git clone --depth 1 https://github.com/openfootball/england.git
        git clone --depth 1 https://github.com/openfootball/espana.git
        git clone --depth 1 https://github.com/openfootball/champions-league.git
        git clone --depth 1 https://github.com/openfootball/europe.git
        git clone --depth 1 https://github.com/openfootball/austria.git

    - name: Generate updated data
      run: python3 converter.py

    - name: Include parsed_json folder
      run: git add parsed_json/

    - name: Configure Git
      run: |
        git config --global user.email "gabale.ag@gmail.com"
        git config --global user.name "walele993"
        git remote set-url origin https://x-access-token:${{ secrets.UPDATE_FOOTBALL_CALENDAR_TOKEN }}@github.com/${{ github.repository }}.git

    - name: Stash changes and pull remote updates
      run: |
        # Stash any unstaged changes to have a clean state for pull/rebase
        git stash --include-untracked
        git pull origin main --rebase
        # Attempt to pop the stash; if there's nothing stashed, ignore the error
        git stash pop || true

    - name: Commit and push changes
      run: |
        # Assuming that parsed_json is the folder where new JSON files are stored
        git add parsed_json/*
        if ! git diff --staged --quiet; then
          git commit -m "Update football data (automated)"
          git push origin HEAD:main
          echo "âœ… Data updated successfully"
        else
          echo "ðŸ”„ No changes to commit"
        fi
